#!/bin/bash
#SBATCH --output=signal.out
#SBATCH --error=signal.error
#SBATCH --mem=32G
#SBATCH -c 8
#SBATCH --partition=campus-new

ml load STAR/2.7.3a-foss-2019b

###################################################
# Read the i/o parameters file into a dictionary
###################################################
io_file='../../io_parameters.csv'
declare -A dict
# Save default IFS to restore later
OIFS=$IFS
IFS=','
while read key value
do
    dict+=(["$key"]="$value")
done <$io_file
#Restore IFS to default
IFS=$OIFS

######################################
# Use i/o dictionary to build sample
# list and define i/o variables for
# trimming reads
######################################

# Load sample list
base_dir=${dict["base_dir"]}
sample_list=$base_dir${dict['names_file']}
LIST=$(cat "$sample_list")

# Define input and output directories and files
read_dir=$base_dir${dict['trim_dir']}
genome_dir=${dict['mm_genome_dir']}
out_dir=$base_dir${dict['STAR_map_dir']}/${dict['map_name']}
gtf_file=${dict['mm_gtf_dir']}

# Create the output directories if they don't already exist
if [ ! -d $out_dir ]
then
    echo 'creating output directory'
    mkdir -p $out_dir
fi

# Loop over all samples and run STAR
for sample in $LIST;
do
    echo $sample

    if [ ! -d $out_dir/$sample ]
    then
	mkdir $out_dir/$sample
    fi

    outprefix=$out_dir/$sample/$sample'-'
    bamfile=$outprefix'Aligned.sortedByCoord.out.bam'
    STAR \
	--runThreadN 8 \
	--runMode inputAlignmentsFromBAM \
	--outFileNamePrefix  $outprefix \
	--inputBAMfile $bamfile \
	--outWigType bedGraph \
	--outWigStrand Stranded
    echo 'done'
done
